@charset "UTF-8";.--italic,dfn{font-style:italic}h2,p{font-weight:500}.btn,.slick-dots,h2{text-align:center}.slick-slider,html{-webkit-tap-highlight-color:transparent}.slick-loading .slick-slide,.slick-loading .slick-track{visibility:hidden}@font-face{font-family:Montserrat;font-style:normal;font-weight:400;src:local('Montserrat Regular'),local('Montserrat-Regular'),url(https://fonts.gstatic.com/s/montserrat/v12/NX1NravqaXESu9fFv7Kuqi3USBnSvpkopQaUR-2r7iU.ttf) format('truetype')}@font-face{font-family:Montserrat;font-style:normal;font-weight:500;src:local('Montserrat Medium'),local('Montserrat-Medium'),url(https://fonts.gstatic.com/s/montserrat/v12/BYPM-GE291ZjIXBWrtCwepZDr1FFWNDDd-nT4KRLZaw.ttf) format('truetype')}@font-face{font-family:Montserrat;font-style:normal;font-weight:700;src:local('Montserrat Bold'),local('Montserrat-Bold'),url(https://fonts.gstatic.com/s/montserrat/v12/IQHow_FEYlDC4Gzy_m8fcjGiFLLa8QnHfpD_B0brrWo.ttf) format('truetype')}.--yellow{color:#f8e71c}.--blue{color:#1e9df2}.--gold{color:#ffbd4a}.--red{color:#e34c26}.--input{width:522px;max-width:95vw;display:block;font-size:18px;padding:14px 10px;border:none}.btn,audio,canvas,progress,video{display:inline-block}.--input:placeholder{color:#dedede}.--fill{background:#fff;color:#1e9df2!important}.btn,h2,p{color:#fff}h2{font-size:23px}p{font-size:18px}.btn,body{font-size:16px}body{font-family:Montserrat,sans-serif}.btn{min-width:187px;font-weight:700;line-height:2;cursor:pointer;border:2px solid #fff;margin:20px}/*! normalize.css v4.0.0 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}.slick-dots li button:before,.slick-next:before,.slick-prev:before{font-family:slick;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}optgroup{font-weight:700}button,input,select{overflow:visible}button,select{text-transform:none}.carouselsect,.head_item{text-transform:uppercase}[type=reset],[type=submit],[type=button],button{cursor:pointer}[disabled]{cursor:default}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}button:-moz-focusring,input:-moz-focusring{outline:ButtonText dotted 1px}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}.slick-dots,.slick-next,.slick-prev{position:absolute;display:block;padding:0}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}/*! normalize.css v4.0.0 | MIT License | github.com/necolas/normalize.css */.slick-loading .slick-list{background:url(ajax-loader.gif) center center no-repeat #fff}@font-face{font-family:slick;src:url(fonts/slick.eot);src:url(fonts/slick.eot?#iefix) format("embedded-opentype"),url(fonts/slick.woff) format("woff"),url(fonts/slick.ttf) format("truetype"),url(fonts/slick.svg#slick) format("svg");font-weight:400;font-style:normal}.slick-next,.slick-prev{height:20px;width:20px;line-height:0;font-size:0;cursor:pointer;background:0 0;color:transparent;top:50%;transform:translate(0,-50%);border:none;outline:0}.slick-next:focus,.slick-next:hover,.slick-prev:focus,.slick-prev:hover{outline:0;background:0 0;color:transparent}.slick-next:focus:before,.slick-next:hover:before,.slick-prev:focus:before,.slick-prev:hover:before{opacity:1}.slick-next.slick-disabled:before,.slick-prev.slick-disabled:before{opacity:.25}.slick-next:before,.slick-prev:before{font-size:20px;line-height:1;color:#fff;opacity:.75}.slick-prev{left:-25px}[dir=rtl] .slick-prev{left:auto;right:-25px}.slick-prev:before{content:"←"}.slick-next:before,[dir=rtl] .slick-prev:before{content:"→"}.slick-next{right:-25px}[dir=rtl] .slick-next{left:-25px;right:auto}[dir=rtl] .slick-next:before{content:"←"}.slick-dotted.slick-slider{margin-bottom:30px}.slick-dots{bottom:-25px;list-style:none;margin:0;width:100%}.slick-dots li{position:relative;display:inline-block;height:20px;width:20px;margin:0 5px;padding:0;cursor:pointer}.slick-dots li button{border:0;background:0 0;display:block;height:20px;width:20px;outline:0;line-height:0;font-size:0;color:transparent;padding:5px;cursor:pointer}.slick-dots li button:focus,.slick-dots li button:hover{outline:0}.slick-dots li button:focus:before,.slick-dots li button:hover:before{opacity:1}.slick-dots li button:before{position:absolute;top:0;left:0;content:"•";width:20px;height:20px;font-size:6px;line-height:20px;text-align:center;color:#000;opacity:.25}.banner,.slick-list,.slick-slider,.slick-track{position:relative}.slick-dots li.slick-active button:before{color:#000;opacity:.75}.slick-slider{display:block;box-sizing:border-box;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y}.slick-list{overflow:hidden;display:block;margin:0;padding:0}.slick-list:focus{outline:0}.slick-list.dragging{cursor:pointer;cursor:hand}.slick-slider .slick-list,.slick-slider .slick-track{transform:translate3d(0,0,0)}.slick-track{left:0;top:0;display:block;margin-left:auto;margin-right:auto}.slick-track:after,.slick-track:before{content:"";display:table}.slick-track:after{clear:both}.slick-slide{float:left;height:100%;min-height:1px;display:none}[dir=rtl] .slick-slide{float:right}.slick-slide img{display:block}.slick-slide.slick-loading img{display:none}.slick-slide.dragging img{pointer-events:none}.slick-initialized .slick-slide{display:block}.slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.slick-arrow.slick-hidden{display:none}.banner{background:linear-gradient(225deg,#00d2ff 0,#3a7bd5 100%);min-height:100vh}.banner__header{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;color:#fff;max-width:95vw;margin:0 auto}.logo__header{margin:0 82px 0 0}.alert__header{word-wrap:break-word}.banner__main-content{max-width:1200px;margin:0 auto;color:#fff}.banner__btn{position:absolute;left:20vw}.banner__btn.--top{top:30vh}.banner__btn.--bottom{top:50vh}.banner__descr,.banner__line{top:calc(50vh + 19px);position:absolute}.banner__descr{max-width:250px;text-align:justify;left:40vw}.banner__logo,.btn-sect__btn,.footer_logo,.grafic__title,.whitepapper{text-align:center}.banner__logo{position:absolute;right:20vw;top:30vh}.logo-min{margin-top:10vh}.carouselsect{background:linear-gradient(180deg,#efefbb 0,#d4d3dd 100%);color:#1e9df2;font-weight:500;font-size:18px}.carousel-wrapper{position:relative;z-index:2;max-width:1245px;padding:0 50px;margin:0 auto;border-radius:15px}.carousel-wrapper .next-arr{position:absolute;right:15px;top:calc(50% - 15px);cursor:pointer}.carousel-wrapper .prev-arr{position:absolute;left:15px;top:calc(50% - 15px);cursor:pointer}.carousel-wrapper .carouslitem{display:-ms-flexbox;display:flex;height:120px;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around;overflow:hidden}.carousel-wrapper img{display:block;width:100%}.btn-sect{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:distribute;justify-content:space-around;padding-top:120px;padding-bottom:50px;max-width:1200px;margin:0 auto}#videobtnico,#videobtntext,#videoinstructions{display:inline-block}.btn-sect .btn{border-color:#1e9df2;color:#1e9df2;padding:0 13px;border-radius:5px}.btn-sect__btn{margin:20px}#videoinstructions{width:38px;height:38px;margin-right:10px;background:url(../img/play-btn-ico.svg) center center no-repeat}#videobtnico,.faq-btn{width:50px;height:50px}#videobtnico{margin-left:10px;background:url(../img/video-btn.svg) center center no-repeat}.btn-sect__btn{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;cursor:pointer}.faq-btn{border-radius:100%;border:2px solid #1e9df2}.default{min-height:50px;transition:all .2s ease-in-out}.default:hover{box-shadow:0 0 5px 1px #1e9df2}.token-warp{background:linear-gradient(225deg,#00d2ff 0,#3a7bd5 100%)}.grafic{position:relative;overflow:hidden}.grafic__title{color:#fff;font-size:34px;font-weight:500;margin-top:80px}@keyframes shadow-ripple{0%,100%{text-shadow:0 0 0 #fff}50%{text-shadow:0 0 40px #fff}}.grafic-container{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:distribute;justify-content:space-around;-ms-flex-align:center;align-items:center;color:#fff;max-width:1200px;margin:0 auto}.grafic_steps{list-style-type:none;margin:30px 0 0}.grafic_steps .grafic_steps_item{font-weight:500;font-size:18px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;margin:10px}.grafic_steps .grafic_steps_item .grafic-item-ico{margin-right:20px;width:30px;height:35px;display:block}.active{animation:shadow-ripple 1.5s linear infinite}@media screen and (max-width:670px){.grafic-pictire{display:none}.grafic-responsive{display:block}}.bonuces-container,.footer{display:-ms-flexbox;-ms-flex-wrap:wrap}.bonuces-container{display:flex;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center;color:#fff;font-size:18px;font-weight:500}.bonuces-container h2{text-align:center;width:100%}.bonuces-container .bonuces-description{width:400px;max-width:95%;padding:20px}.bonuces-form{width:400px;max-width:95vw;padding:20px}.bonuces-form .bonuses-input{width:100%;padding:8px 12px;border:none;box-sizing:border-box}.bonuces-form .bonuses-input::-webkit-input-placeholder{color:#ddd;font-weight:600}.bonuces-form .bonuses-input::-moz-placeholder{color:#ddd;font-weight:600}.bonuces-form .bonuses-input:-ms-input-placeholder{color:#ddd;font-weight:600}.bonuces-form .bonuses-input::placeholder{color:#ddd;font-weight:600}.grafic-bonuces-picture{width:800px;max-width:95%}#video,.pop-up{width:100vw;height:100vh}.bonuces-container{padding:40px 0}.bonuses-button{border:none;border-radius:10px;padding:10px 20px;background:#fff}.footer{display:flex;flex-wrap:wrap;-ms-flex-pack:distribute;justify-content:space-around;-ms-flex-align:start;align-items:flex-start;color:#FFF;margin-top:190px}.footer_logo{font-size:14px}.footer_logo footer{margin-top:10px}.footer_lins{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:start;align-items:flex-start;border-left:1px solid #fff;margin-bottom:40px;-ms-flex-pack:start;justify-content:flex-start}.footer_links_list{list-style-type:none;margin:0 40px;padding:0}.head_item{font-weight:500;font-size:18px;color:#fff}.footer_links_list_item{padding:20px 0}.footer_links_list_item a{text-decoration:none;color:#fff}.footer_links_list_item:last-child{padding:20px 0 0}.pop-up{position:fixed;left:0;top:0;display:none;z-index:3}.close-btn{position:absolute;top:30px;right:20px;font-size:60px;color:#fff;cursor:pointer}.whitepapper .close-button,.whitepapper .lang-item a{color:#000;text-decoration:none}@media screen and (max-width:600px){.buysect-pop-up-container{width:80vw!important}}@media screen and (max-width:520px){.footer_logo{-ms-flex-order:1;order:1;margin:40px 0 60px!important}}@media screen and (max-width:420px){.footer_links_list{margin:30px}.footer_lins{border-left:none!important}}.whitepapper-overlay{display:none;position:fixed;top:0;left:0;width:100vw;height:100vh;background-color:rgba(0,0,0,.5);z-index:2}.whitepapper{position:fixed;z-index:3;display:none;background-color:#fff;width:320px;top:calc(50vh - 113px);left:calc(50vw - 180px);border-radius:15px;padding:20px}.whitepapper .close-button{position:absolute;top:10px;right:20px}.whitepapper .lang-list{list-style-type:none;margin:0;padding:0}.buysect-pop-up .account-enter div,.qrpop-up .account-enter div,.whitepapper .lang-item{margin:10px}.whitepapper .lang-item a:hover{text-decoration:underline}.buysect-pop-up,.qrpop-up{display:none;position:fixed;width:100vw;height:100vh;top:0;left:0;background:rgba(0,0,0,.5);z-index:5}.buysect-pop-up .buysect-pop-up-container,.qrpop-up .buysect-pop-up-container{text-align:left!important}.buysect-pop-up .buysect-pop-up-container,.buysect-pop-up .qr-container,.qrpop-up .buysect-pop-up-container,.qrpop-up .qr-container{background-color:#fff;padding:20px;position:absolute;max-width:266px;left:50%;top:50%;transform:translate(-50%,-50%);text-align:center}.buysect-pop-up .buysect-pop-up-container img,.buysect-pop-up .qr-container img,.qrpop-up .buysect-pop-up-container img,.qrpop-up .qr-container img{display:block;margin-bottom:10px;width:230px}.buysect-pop-up .buysect-pop-up-container .qr-text,.buysect-pop-up .qr-container .qr-text,.qrpop-up .buysect-pop-up-container .qr-text,.qrpop-up .qr-container .qr-text{position:absolute;text-align:center;bottom:-40px;color:#fff;width:300px;left:calc(50% - 150px);font-size:20px}.closebtn{position:absolute;color:#fff;top:-30px;right:-30px;text-decoration:none;font-size:30px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
